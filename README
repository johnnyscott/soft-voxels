ChangeLog

9/5/2011
  * uses a scene graph data structure I made
  * added support for single call to drawarrays per frame giving 100-1000x performance boost
  * added a flying camera and WASD control for run/strafe plus mouse look control
  IMMEDIATE TO DOS
  [ ] IMPORT GEOMETRY get a textured ground plane from blender
      [ ] add simple loading/status message
      [ ] implement sceneGraph->rebuildBuffers as a web worker
      [ ] install gimp/blender 
      [ ] create a fancy textured ground plane in blender, bake some lighting into the texture
      [ ] setup/test this json export script->https://github.com/alteredq/three.js/blob/master/utils/exporters/convert_obj_three.py      
      [ ] load the model, hook up status
      [ ] create a new obj_type obj_mesh for arbitrary geometry
      [ ] get the ground plane to render, skip the bushes step
      [ ] basically no facets! figure out smoothing groups / update shader for smooth shading, 
      
      
 



 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
OLD GOALS

short term GOALS 
-Camera
[x] * horizontal rotation range 360(?)
[x] * strafe
[x] * html console    
[x] * camera flys
    
-World
  * lighting
      o learn shader
      o find limits on count
  * skybox
  
  
  [x] figure out wireframe toggle
  [x] try no double sided (backface cull) - doesn't work since these aren't facing
  [x] find performance limits
  [x] find fastest environment (browser, outside of browser?!)
  [x]single geometry push - how to?
  [x]single texture push - how to?
  
    
-Architecture
[x] * learn about scene graphs
[x] * change field to a scene graph  
    * import a model from max including coords + texture
   
    
big picture GOALS

-Character
  * get dummy character with mario 64 movement controls 
  * add jump to character
  * basic physics in movement (direction vector, friction again)

-Camera
  * over the shoulder view 3rd person
  * camera on a track view (accelerate/ decelerate)
      o draw paths, represent them
      o stopping points? CLICKS on path?
  * swap views ->world view (default) -> and back
    
    
    